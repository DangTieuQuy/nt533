
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
spec:
  serviceName: mongodb
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: mongodb
        image: mcr.microsoft.com/mirror/docker/library/mongo:4.2
        # env:
        #  - name: MONGO_INITDB_ROOT_USERNAME
        #    value: "quydangusername"
        #  - name: MONGO_INITDB_ROOT_PASSWORD
        #    value: "quydangpassword"
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-credentials
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-credentials
              key: password
        ports:
        - containerPort: 27017
          name: mongodb
        resources:
          requests:
            cpu: 5m
            memory: 75Mi
          limits:
            cpu: 25m
            memory: 1024Mi
        # livenessProbe:
        #   exec:
        #     command:
        #     - mongosh
        #     - --eval
        #     - db.runCommand('ping').ok
        #   initialDelaySeconds: 5
        #   periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  ports:
  - port: 27017
  selector:
    app: mongodb
  type: ClusterIP 
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-credentials
type: Opaque
data:
  username: cXV5ZGFuZ3VzZXJuYW1l
  password: cXV5ZGFuZ3Bhc3N3b3Jk
